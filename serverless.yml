org: clouding

service: awth

frameworkVersion: "4"

package:
  individually: true
  patterns: ["package.json"]

build:
  esbuild:
    format: esm
    minify: true
    bundle: true
    external:
      - "@aws-sdk/client-s3"
    exclude:
      - "@aws-sdk/*"
    packages: external
    buildConcurrency: 10
    sourcemap: false

provider:
  name: aws
  runtime: nodejs20.x
  environment:
    COGNITO_CLIENT_ID: !Ref UserPoolClient

resources:
  Resources:
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: awthUserPool
        DeletionProtection: ACTIVE
        MfaConfiguration: "OFF"
        AutoVerifiedAttributes:
          - email
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false
        UsernameAttributes:
          - email
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email
              Priority: 1
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
            RequireUppercase: true
            TemporaryPasswordValidityDays: 2
        Schema:
          - Name: given_name
            Mutable: true
            Required: true
            AttributeDataType: String
          - Name: family_name
            Mutable: true
            Required: true
            AttributeDataType: String
    UserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: awthUserPoolClient
        UserPoolId: !Ref UserPool
        ExplicitAuthFlows:
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        TokenValidityUnits:
          AccessToken: hours
          RefreshToken: hours
        AccessTokenValidity: 3
        RefreshTokenValidity: 1440 # 60 days

functions:
  hello:
    handler: src/lambdas/hello.handler
    events:
      - httpApi:
          path: /
          method: GET
  signUp:
    handler: src/lambdas/auth/sign-up/index.handler
    events:
      - httpApi:
          path: /auth/sign-up
          method: POST
  accountConfirmation:
    handler: src/lambdas/auth/account-confirmation/index.handler
    events:
      - httpApi:
          path: /auth/account-confirmation
          method: POST
  signIn:
    handler: src/lambdas/auth/sign-in/index.handler
    events:
      - httpApi:
          path: /auth/sign-in
          method: POST
  refreshToken:
    handler: src/lambdas/auth/refresh-token/index.handler
    events:
      - httpApi:
          path: /auth/refresh-token
          method: POST          